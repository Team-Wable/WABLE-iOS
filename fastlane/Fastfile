default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    api_key = app_store_connect_api_key(
      key_id: ENV["KEY_ID"],
      issuer_id: ENV["ISSUER_ID"],
      key_filepath: "./fastlane/AuthKey_#{ENV["KEY_ID"]}.p8"
    )
    
    match(type: "appstore", api_key: api_key, readonly: true)
    
    # Xcode 프로젝트에서 자동으로 버전 읽기
    current_version = get_version_number(
      xcodeproj: "Wable-iOS.xcodeproj",
      target: "Wable-iOS"  # 실제 타겟 이름
    )
    
    UI.message("Current version from Xcode: #{current_version}")
    
    # TestFlight의 최신 빌드 번호 가져오기
    begin
      latest_build = latest_testflight_build_number(
        api_key: api_key,
        version: current_version,
        app_identifier: ENV["APP_IDENTIFIER"],
        initial_build_number: 0
      )
      
      # 빌드 번호만 증가
      new_build = latest_build + 1
      
    rescue => e
      # 버전이 닫혔거나 App Store에 있으면 에러 발생
      UI.error("Version #{current_version} is closed on App Store!")
      UI.error("Please update version in Xcode (Target → General → Version)")
      UI.user_error!("Update version in Xcode first, then run again")
    end
    
    # 빌드 번호만 업데이트 (버전은 건드리지 않음)
    increment_build_number(
      build_number: new_build,
      xcodeproj: "Wable-iOS.xcodeproj"
    )
    
    UI.success("Building version #{current_version} (#{new_build})")
    
    build_app(scheme: "Wable-iOS")
    
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      uses_non_exempt_encryption: false
    )
    
    UI.success("✅ Uploaded #{current_version} (#{new_build}) to TestFlight!")
  end
end